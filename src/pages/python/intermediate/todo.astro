---
import Layout from "../../../layouts/Layout.astro";
import ProjectCarouselWithTabs from '../../../components/ProjectCarousel.tsx'; 
import CodeChangeCard from "../../../components/codeChangeCard";
import project from "../../../content/intermediatePython/toDoGui";

// Function to dynamically fetch GitHub stats
const fetchGitHubStats = async (): Promise<{
  commits: number;
  additions: number;
  deletions: number;
  files: number;
}> => {
    // Define an interface for the week object structure
interface Week {
  a: number;  // Additions
  d: number;  // Deletions
  // Add any other properties that might be in the week object
}

// Define an interface for the userStats object
interface UserStats {
  weeks: Week[];
  // Add any other properties that might be in the userStats object
}
  // Use the project data if available, otherwise fall back to hardcoded values
  const username = project.githubUsername || "thisisnich";
  const repoOwner = project.repoOwner || "thisisnich";
  const repoName = project.repoName || "betheler-budget-finance";

  try {
    const res = await fetch(
      `https://api.github.com/repos/${repoOwner}/${repoName}/stats/contributors`
    );

    // GitHub may return 202 while it generates the stats
    if (!res.ok) {
      throw new Error(`GitHub API error: ${res.status} ${res.statusText}`);
    }

    const data = await res.json();

    if (!Array.isArray(data)) {
      throw new Error("GitHub is still generating stats. Try again later.");
    }

    const userStats = data.find(
      (contributor) => contributor.author.login === username
    );

    if (!userStats) throw new Error("User not found in contributors");



// Now use these types in your reduce functions
const additions = userStats.weeks.reduce((sum: number, week: Week) => sum + week.a, 0);
const deletions = userStats.weeks.reduce((sum: number, week: Week) => sum + week.d, 0);    const commits = userStats.total;
    const files = 0; // Still requires per-commit analysis

    return { commits, additions, deletions, files };

  } catch (error) {
    console.error("Error fetching GitHub stats:", error);
    return {
      commits: 0,
      additions: 0,
      deletions: 0,
      files: 0
    };
  }
};

// Fetch GitHub stats
const contributions = await fetchGitHubStats();
---

<Layout title={project.title}>
    <main class="max-w-4xl mx-auto text-white px-4 sm:px-6 lg:px-8 py-10">
        <!-- Hero Section -->
        <section class="mb-12 text-center">
            <div class="relative inline-block mb-6">
                <div class="absolute -inset-1 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg blur opacity-75"></div>
                <h1 class="relative text-4xl font-bold bg-gray-900 rounded-lg px-6 py-2">{project.title}</h1>
            </div>
            <p class="text-xl mb-6">{project.description}</p>
            <div class="flex flex-wrap justify-center gap-4">
                <a href={project.website} target="_blank" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition">View Live Demo</a>
                <a href={project.repo} target="_blank" class="bg-gray-700 hover:bg-gray-800 text-white px-6 py-2 rounded-lg transition">GitHub Repository</a>
            </div>
            <div class="mt-6 inline-block bg-gray-800 px-4 py-2 rounded-lg">
                <span class="text-sm mr-2">üåì</span>
                <span class="text-gray-300">Now with dark mode!</span>
            </div>
        </section>

        <!-- Screenshots Carousel Section -->
        <section class="mb-12">
            <h2 class="text-2xl font-bold mb-4">Project Showcase</h2>
            <div class="bg-gray-800 p-4 rounded-lg shadow-lg">                
                {project.hasCarousel && (
                    <ProjectCarouselWithTabs categories={project.carouselCategories} client:load/>
                )}
                
                {/* Feature highlight section */}
                <div class="mt-6 p-4 bg-gray-700 rounded-lg">
                    <h3 class="text-lg font-medium mb-2">üîç Feature Highlight: {project.featureHighlight.title}</h3>
                    <p class="text-sm text-gray-300 mb-3">{project.featureHighlight.description}</p>
                    <div class="aspect-video bg-gray-800 flex items-center justify-center rounded">
                        <img src={project.featureHighlight.image} alt={`${project.featureHighlight.title} Screenshot`}>
                    </div>
                </div>
            </div>
        </section>

        <!-- Project Info Grid -->
        <section class="grid md:grid-cols-2 gap-8 mb-12">
            <!-- Technologies Column -->
            <div>
                <h2 class="text-2xl font-bold mb-4">Technologies Used</h2>
                <div class="flex flex-wrap gap-2 mb-6">
                    {project.technologies.map(tech => (
                        <span class="bg-gray-700 px-3 py-1 rounded-full text-sm">{tech}</span>
                    ))}
                </div>
                
                <h2 class="text-2xl font-bold mb-4">Contribution Stats</h2>
                <div class="grid grid-cols-2 gap-4">
                    <div class="bg-gray-800 p-4 rounded-lg">
                        <p class="text-gray-400 text-sm">Commits</p>
                        <p class="text-2xl font-bold">{contributions.commits}</p>
                    </div>
                    <div class="bg-gray-800 p-4 rounded-lg">
                        <p class="text-gray-400 text-sm">Files Changed</p>
                        <p class="text-2xl font-bold">{contributions.files}</p>
                    </div>
                    <div class="bg-gray-800 p-4 rounded-lg">
                        <p class="text-gray-400 text-sm">Additions</p>
                        <p class="text-2xl font-bold text-green-500">+{contributions.additions}</p>
                    </div>
                    <div class="bg-gray-800 p-4 rounded-lg">
                        <p class="text-gray-400 text-sm">Deletions</p>
                        <p class="text-2xl font-bold text-red-500">-{contributions.deletions}</p>
                    </div>
                </div>
            </div>
            
            <!-- Features Column -->
            <div>
                <h2 class="text-2xl font-bold mb-4">Key Features</h2>
                <ul class="space-y-3">
                    {project.features.map(feature => (
                        <li class="flex items-start">
                            <span class="text-green-500 mr-2">‚úì</span>
                            <span>{feature}</span>
                        </li>
                    ))}
                </ul>
                
                <h2 class="text-2xl font-bold mt-8 mb-4">About the Project</h2>
                <div class="bg-gray-800 p-4 rounded-lg">
                    {project.aboutProject.isForked ? (
                        <>
                            <p class="mb-4">This project is a fork of <strong>{project.aboutProject.mainProject.title}</strong>. {project.aboutProject.mainProject.description}</p>
                            <p class="mb-4">{project.aboutProject.additionalInfo}</p>
                            <div class="flex flex-col space-y-2">
                                <a href={project.aboutProject.mainProject.website} target="_blank" class="text-blue-400 hover:underline">
                                    View original project
                                </a>
                                <a href={project.aboutProject.mainProject.repo} target="_blank" class="text-blue-400 hover:underline">
                                    Original repository
                                </a>
                            </div>
                        </>
                    ) : (
                        <p>{project.aboutProject.additionalInfo}</p>
                    )}
                </div>
            </div>
        </section>
        
        <!-- My Improvements Section with Collapsible Code -->
        <section class="mb-12">
            <h2 class="text-2xl font-bold mb-6">My Improvements & Code Changes</h2>
            <div class="space-y-8">
                {project.codeChanges.map((change) => (
                    <CodeChangeCard 
                        title={change.title}
                        description={change.description}
                        code={change.code}
                        maxLines={25}
                        client:visible
                    />
                ))}
            </div>
        </section>

        <!-- Implementation Details Section -->
        <section class="mb-12">
            <h2 class="text-2xl font-bold mb-4">Implementation Details</h2>
            <div class="prose prose-invert max-w-none">
                <p>
                    In this project, I've focused on enhancing the user experience and adding functionality that makes the budget tracker more powerful and useful for daily financial management. Below are some of the key implementation details:
                </p>
                
                {project.implementationDetails.map((detail) => (
                    <>
                        <h3>{detail.title}</h3>
                        <p>{detail.description}</p>
                    </>
                ))}
            </div>
        </section>
    </main>
</Layout>

<style>
  /* Add this style to handle collapsed code sections */
.max-h-code-collapsed {
  position: relative;
}

.max-h-code-collapsed::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50px;
  background: linear-gradient(to bottom, transparent, rgba(17, 24, 39, 0.9));
  pointer-events: none;
}
</style>
```